Dobrze jest robić brancze dla każdego zadania. Wtedy nie powinna być wiele konfliktów.

Commity należy robić w miarę często, powiedzmy 2-3 razy dziennie.

Dobrze jest skonfigurować konto:
	git config --global user.name <nazwa/alias>
	git config --global user.email <twoj email na githubie>

Komity dobrze jest pisać po angielsku, żeby ewentualny zespół coś mógł zrozumieć.
Należy w wiadomości podać numer zadania, ułatwia to potem odnalezienie zmian.


		GIT_IGNOR
Warto zadbać o plik gitignor. Jest to związane z szybkością komunikacji z repozytorium.
Dodatkowo można po tym poznać, że ktoś używa gita świadomie i dba o szczegóły
	Na github jest repozytorium z szablonami dla lepszego i szybszego skonfigurowania .gitignor
	-- github/gitignore --
	lub poszykać "www.gitignore.io"
Odonśnie odpowiednich wzorców można sprawdzić stronę:
	atlassian git ignore pattern


Jeżeli robimy -merdza- to należy przełączyć się na gałąź do krórej będziemy przyłańczać zmiany
np. "main" i podajemy w poleceniu jak gałąź ma się złączyć

Dobre praktyki nazewnictwa commitów:
	- podzielić na tytył i zawartość
	- limitowanie znaków w tytule (zwieńźle i na temat) mniej niż 50 znaków
	- zaczynamy od wielkiej litery dla lepszej czytelności
	- nie stawiamy kropki na końcu tytułu (na końcu opisu możemy dać)
	- używamy trybu rozkazującego, zwiększa to czytelność jednocześnie zmiejsza ilość znaków
	- co i dlaczego zostało zmienione => opis (umieszczamy numery zadań jeżeli są)


Komenda git reflog pokazuje nam wszystkie zmiany i komity w lokalnym repo, tak więc możemy mieć dostęp do komitów
jakich już nie ma w git log - bardzo przydatna funkcja, warto pamiętać!

	
Rebase to wyrównywaie commitów, najlepiej przy merdzowaniu zmian zrobić rebase z gałęźią main to powinna ułatwić nam rozwiązywnai
konfliktó i jednocześnie commity na gałęźi main są łatwiejsze przy debagowaniu błędów.
Rebase także zabezpiecza przed sytuacją, gdzy kilka osób pracuje na tym samym kodzie i jednocześnie wprowadza zminay



